&module experiments.test_scenarios.for_loop.for_loop_test_module.ForLoopTestModule

@0:5 for i in 1 to 1 call write_to_logger 'This message should be written once in each node'

@0:10 for i in -2 to 1 call write_to_logger 'This message should be written four times in each node'

@! set my_var 1
@0:14 write_to_logger 'The following line should not be parsable due to its peerspec'
@0:15 write_to_logger 'This message will not be printed anywhere' {$my_var}

@0:19 write_to_logger 'The following for loop should still work, but the control variable will be overwritten as a parameter. The peerspec will not be affected by this'
@0:20 for my_var in 1 to 10 call test $my_var vval=$my_var cst=should_be_constant {$my_var}

@0:22 write_to_logger 'The following for loop will work even if the peerspec is empty'
@0:23 for my_var in 1 to 1 call write_to_logger 'For loop with empty peerpec' {}

@0:24 write_to_logger 'The following for loops will not work due to the erroneous peerspec'
@! set i 1
@0:25 for my_var in 1 to 10 call write_to_logger 'Will not work - $i' {$i}
@0:25 for my_var in 1 to 10 call write_to_logger 'Will not work - $j' {$j}
@0:25 for my_var in 1 to 10 call write_to_logger 'Will not work - $' {$}

@0:29 write_to_logger 'The following for loops will not work due to the syntax (see logs for parse errors)'
@0:25 for my_var 1 to 10 call write_to_logger 'Will not work'
@0:25 for my_var in 1 10 call write_to_logger 'Will not work'
@0:25 for my_var in 1 to call write_to_logger 'Will not work'
@0:25 for my_var in to 10 call write_to_logger 'Will not work'


@0:35 write_to_logger 'The following loop will not work since peer exclusion in the peerspec is not yet supported'
@0:36 for j in 1 to 10 call write_to_logger 'Will not work' {!3}
@0:37 write_to_logger 'This message will be written by everyone except the node with id 3' {!3}

@0:40 stop
